import { Router } from 'express';
import { sendEmail, generateWelcomeEmail } from '../services/emailService';

const router = Router();

/**
 * Sends a welcome email to a user after completing onboarding
 * POST /api/notifications/send-welcome
 */
router.post('/send-welcome', async (req, res) => {
  try {
    const { email, name, code, category, preferences } = req.body;
    
    if (!email || !name) {
      return res.status(400).json({ 
        success: false, 
        message: 'Email and name are required' 
      });
    }
    
    // Generate welcome email content
    const { text, html } = generateWelcomeEmail({ 
      email, 
      name, 
      code: code || 'TRAVEL-STD-0000',  // Fallback if no code provided
      category: category || 'Standard Traveler', // Fallback if no category provided
      preferences
    });
    
    // Send the email
    const success = await sendEmail({
      to: email,
      subject: 'Welcome to JET AI Travel Assistant!',
      text,
      html
    });
    
    if (success) {
      res.status(200).json({ 
        success: true, 
        message: 'Welcome email sent successfully' 
      });
    } else {
      res.status(500).json({ 
        success: false, 
        message: 'Failed to send welcome email' 
      });
    }
  } catch (error) {
    console.error('Error sending welcome email:', error);
    res.status(500).json({ 
      success: false, 
      message: 'Internal server error while sending email'
    });
  }
});

/**
 * Sends a travel itinerary email with details
 * POST /api/notifications/send-itinerary
 */
router.post('/send-itinerary', async (req, res) => {
  try {
    const { email, name, itinerary, destinations } = req.body;
    
    if (!email || !name || !itinerary) {
      return res.status(400).json({ 
        success: false, 
        message: 'Email, name, and itinerary data are required' 
      });
    }
    
    // Format itinerary HTML here
    // This would be more complex in a real app
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Your JET AI Travel Itinerary</title>
  <style>
    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
    .header { background-color: #050b17; padding: 20px; text-align: center; }
    .content { padding: 20px; background-color: #f9f9f9; }
    .footer { text-align: center; padding: 10px; font-size: 12px; }
    h1, h2 { color: #4a89dc; }
    .destination { margin-bottom: 20px; padding: 10px; border-left: 3px solid #4a89dc; }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <img src="https://i.imgur.com/LZ4TQkz.png" alt="JET AI Logo" style="max-width: 150px;">
    </div>
    <div class="content">
      <h1>Your Travel Itinerary</h1>
      <p>Hello ${name},</p>
      <p>Here is your custom travel itinerary generated by JET AI:</p>
      
      <div class="itinerary-details">
        ${destinations?.map((destination: string) => `
          <div class="destination">
            <h3>${destination}</h3>
            <p>Your personalized recommendations will appear here.</p>
          </div>
        `).join('') || '<p>No destinations found in your itinerary.</p>'}
      </div>
      
      <p>Log in to your JET AI dashboard to see more details and make adjustments to your travel plans.</p>
    </div>
    <div class="footer">
      <p>&copy; 2025 JET AI Travel Assistant | All Rights Reserved</p>
    </div>
  </div>
</body>
</html>
    `;
    
    // Send the email
    const success = await sendEmail({
      to: email,
      subject: 'Your JET AI Travel Itinerary',
      html: htmlContent
    });
    
    if (success) {
      res.status(200).json({ 
        success: true, 
        message: 'Itinerary email sent successfully' 
      });
    } else {
      res.status(500).json({ 
        success: false, 
        message: 'Failed to send itinerary email' 
      });
    }
  } catch (error) {
    console.error('Error sending itinerary email:', error);
    res.status(500).json({ 
      success: false, 
      message: 'Internal server error while sending email'
    });
  }
});

/**
 * Sends a custom email to users from admin panel
 * POST /api/notifications/send-custom
 */
router.post('/send-custom', async (req, res) => {
  try {
    const { email, name, subject, content, code, category } = req.body;
    
    if (!email || !subject || !content) {
      return res.status(400).json({ 
        success: false, 
        message: 'Email, subject, and content are required' 
      });
    }
    
    // Format custom email HTML
    const htmlContent = `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>${subject}</title>
  <style>
    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
    .container { max-width: 600px; margin: 0 auto; padding: 20px; }
    .header { background-color: #050b17; padding: 20px; text-align: center; }
    .content { padding: 20px; background-color: #f9f9f9; }
    .footer { text-align: center; padding: 10px; font-size: 12px; }
    h1 { color: #4a89dc; }
    .code { background-color: #050b17; color: white; padding: 8px; border-radius: 4px; font-family: monospace; }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <img src="https://i.imgur.com/LZ4TQkz.png" alt="JET AI Logo" style="max-width: 150px;">
    </div>
    <div class="content">
      <h1>${subject}</h1>
      <p>Hello ${name || 'Traveler'},</p>
      
      <div>${content.replace(/\n/g, '<br>')}</div>
      
      ${code ? `
      <div style="margin-top: 20px; margin-bottom: 20px;">
        <p>Your JET AI Access Code:</p>
        <div class="code">${code}</div>
      </div>
      ` : ''}
      
      <p style="margin-top: 20px;">Thank you for choosing JET AI for your travel needs.</p>
    </div>
    <div class="footer">
      <p>&copy; 2025 JET AI Travel Assistant | All Rights Reserved</p>
    </div>
  </div>
</body>
</html>
    `;
    
    // Send the email
    const success = await sendEmail({
      to: email,
      subject,
      html: htmlContent
    });
    
    if (success) {
      res.status(200).json({ 
        success: true, 
        message: 'Custom email sent successfully' 
      });
    } else {
      res.status(500).json({ 
        success: false, 
        message: 'Failed to send custom email' 
      });
    }
  } catch (error) {
    console.error('Error sending custom email:', error);
    res.status(500).json({ 
      success: false, 
      message: 'Internal server error while sending email'
    });
  }
});

export default router;